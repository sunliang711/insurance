// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2019-08-14 11:40:26.742196994 +0800 CST m=+0.020944806

package docs

import (
	"bytes"
	"encoding/json"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server Petstore server.",
        "title": "Swagger Example API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "aliyun.eagle711.win:8081",
    "basePath": "/",
    "paths": {
        "/claim": {
            "post": {
                "description": "理赔申请",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "理赔申请"
                ],
                "summary": "理赔申请",
                "parameters": [
                    {
                        "description": "COMMENT",
                        "name": "claim",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/types.Claim"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "COMMENT",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "400": {
                        "description": "COMMENT",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/location": {
            "get": {
                "description": "返回全国省市列表",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "全国省市"
                ],
                "summary": "全国省市",
                "responses": {
                    "200": {
                        "description": "省市列表",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/reason": {
            "get": {
                "description": "TODO",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "出险原因"
                ],
                "summary": "出险原因",
                "responses": {
                    "200": {
                        "description": "COMMENT",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/type": {
            "get": {
                "description": "TODO",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "出险类型"
                ],
                "summary": "出险类型",
                "responses": {
                    "200": {
                        "description": "COMMENT",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "types.Claim": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "types.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object"
                },
                "msg": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{ Schemes: []string{}}

type s struct{}

func (s *s) ReadDoc() string {
	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface {}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, SwaggerInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
